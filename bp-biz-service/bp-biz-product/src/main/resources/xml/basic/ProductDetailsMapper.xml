<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tuodao.bp.product.db.mapper.basic.ProductDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.tuodao.bp.product.db.model.basic.ProductDetails" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="orginal_id" property="orginalId" jdbcType="INTEGER" />
    <result column="borrow_id" property="borrowId" jdbcType="INTEGER" />
    <result column="borrow_title" property="borrowTitle" jdbcType="VARCHAR" />
    <result column="borrow_amount" property="borrowAmount" jdbcType="DECIMAL" />
    <result column="borrow_type" property="borrowType" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, product_id, orginal_id, borrow_id, borrow_title, borrow_amount, borrow_type, 
    status, add_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tuodao.bp.product.db.model.basic.ProductDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tuodao.bp.product.db.model.basic.ProductDetailsExample" >
    delete from product_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tuodao.bp.product.db.model.basic.ProductDetails" >
    insert into product_details (id, product_id, orginal_id, 
      borrow_id, borrow_title, borrow_amount, 
      borrow_type, status, add_time
      )
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{orginalId,jdbcType=INTEGER}, 
      #{borrowId,jdbcType=INTEGER}, #{borrowTitle,jdbcType=VARCHAR}, #{borrowAmount,jdbcType=DECIMAL}, 
      #{borrowType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tuodao.bp.product.db.model.basic.ProductDetails" >
    insert into product_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="orginalId != null" >
        orginal_id,
      </if>
      <if test="borrowId != null" >
        borrow_id,
      </if>
      <if test="borrowTitle != null" >
        borrow_title,
      </if>
      <if test="borrowAmount != null" >
        borrow_amount,
      </if>
      <if test="borrowType != null" >
        borrow_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="orginalId != null" >
        #{orginalId,jdbcType=INTEGER},
      </if>
      <if test="borrowId != null" >
        #{borrowId,jdbcType=INTEGER},
      </if>
      <if test="borrowTitle != null" >
        #{borrowTitle,jdbcType=VARCHAR},
      </if>
      <if test="borrowAmount != null" >
        #{borrowAmount,jdbcType=DECIMAL},
      </if>
      <if test="borrowType != null" >
        #{borrowType,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tuodao.bp.product.db.model.basic.ProductDetailsExample" resultType="java.lang.Integer" >
    select count(*) from product_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product_details
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.orginalId != null" >
        orginal_id = #{record.orginalId,jdbcType=INTEGER},
      </if>
      <if test="record.borrowId != null" >
        borrow_id = #{record.borrowId,jdbcType=INTEGER},
      </if>
      <if test="record.borrowTitle != null" >
        borrow_title = #{record.borrowTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowAmount != null" >
        borrow_amount = #{record.borrowAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.borrowType != null" >
        borrow_type = #{record.borrowType,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product_details
    set id = #{record.id,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      orginal_id = #{record.orginalId,jdbcType=INTEGER},
      borrow_id = #{record.borrowId,jdbcType=INTEGER},
      borrow_title = #{record.borrowTitle,jdbcType=VARCHAR},
      borrow_amount = #{record.borrowAmount,jdbcType=DECIMAL},
      borrow_type = #{record.borrowType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tuodao.bp.product.db.model.basic.ProductDetails" >
    update product_details
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="orginalId != null" >
        orginal_id = #{orginalId,jdbcType=INTEGER},
      </if>
      <if test="borrowId != null" >
        borrow_id = #{borrowId,jdbcType=INTEGER},
      </if>
      <if test="borrowTitle != null" >
        borrow_title = #{borrowTitle,jdbcType=VARCHAR},
      </if>
      <if test="borrowAmount != null" >
        borrow_amount = #{borrowAmount,jdbcType=DECIMAL},
      </if>
      <if test="borrowType != null" >
        borrow_type = #{borrowType,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tuodao.bp.product.db.model.basic.ProductDetails" >
    update product_details
    set product_id = #{productId,jdbcType=INTEGER},
      orginal_id = #{orginalId,jdbcType=INTEGER},
      borrow_id = #{borrowId,jdbcType=INTEGER},
      borrow_title = #{borrowTitle,jdbcType=VARCHAR},
      borrow_amount = #{borrowAmount,jdbcType=DECIMAL},
      borrow_type = #{borrowType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>