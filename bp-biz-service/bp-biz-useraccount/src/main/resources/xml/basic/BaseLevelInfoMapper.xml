<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tuodao.bp.useraccount.persistence.mapper.basic.BaseLevelInfoMapper" >
  <resultMap id="BaseResultMap" type="com.tuodao.bp.useraccount.persistence.model.basic.BaseLevelInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="min" property="min" jdbcType="INTEGER" />
    <result column="max" property="max" jdbcType="INTEGER" />
    <result column="vip_withdraw_times" property="vipWithdrawTimes" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, level, min, max, vip_withdraw_times, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tuodao.bp.useraccount.persistence.model.basic.BaseLevelInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_level_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from base_level_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_level_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tuodao.bp.useraccount.persistence.model.basic.BaseLevelInfoExample" >
    delete from base_level_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tuodao.bp.useraccount.persistence.model.basic.BaseLevelInfo" >
    insert into base_level_info (id, level, min, 
      max, vip_withdraw_times, remark
      )
    values (#{id,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{min,jdbcType=INTEGER}, 
      #{max,jdbcType=INTEGER}, #{vipWithdrawTimes,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tuodao.bp.useraccount.persistence.model.basic.BaseLevelInfo" >
    insert into base_level_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="min != null" >
        min,
      </if>
      <if test="max != null" >
        max,
      </if>
      <if test="vipWithdrawTimes != null" >
        vip_withdraw_times,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="min != null" >
        #{min,jdbcType=INTEGER},
      </if>
      <if test="max != null" >
        #{max,jdbcType=INTEGER},
      </if>
      <if test="vipWithdrawTimes != null" >
        #{vipWithdrawTimes,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tuodao.bp.useraccount.persistence.model.basic.BaseLevelInfoExample" resultType="java.lang.Integer" >
    select count(*) from base_level_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_level_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.min != null" >
        min = #{record.min,jdbcType=INTEGER},
      </if>
      <if test="record.max != null" >
        max = #{record.max,jdbcType=INTEGER},
      </if>
      <if test="record.vipWithdrawTimes != null" >
        vip_withdraw_times = #{record.vipWithdrawTimes,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_level_info
    set id = #{record.id,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      min = #{record.min,jdbcType=INTEGER},
      max = #{record.max,jdbcType=INTEGER},
      vip_withdraw_times = #{record.vipWithdrawTimes,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tuodao.bp.useraccount.persistence.model.basic.BaseLevelInfo" >
    update base_level_info
    <set >
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="min != null" >
        min = #{min,jdbcType=INTEGER},
      </if>
      <if test="max != null" >
        max = #{max,jdbcType=INTEGER},
      </if>
      <if test="vipWithdrawTimes != null" >
        vip_withdraw_times = #{vipWithdrawTimes,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tuodao.bp.useraccount.persistence.model.basic.BaseLevelInfo" >
    update base_level_info
    set level = #{level,jdbcType=INTEGER},
      min = #{min,jdbcType=INTEGER},
      max = #{max,jdbcType=INTEGER},
      vip_withdraw_times = #{vipWithdrawTimes,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>