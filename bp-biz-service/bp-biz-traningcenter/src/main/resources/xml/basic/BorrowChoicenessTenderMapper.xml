<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tuodao.bp.traningcenter.db.mapper.basic.BorrowChoicenessTenderMapper" >
  <resultMap id="BaseResultMap" type="com.tuodao.bp.traningcenter.db.model.basic.BorrowChoicenessTender" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="borrow_id" property="borrowId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="DECIMAL" />
    <result column="pre_account" property="preAccount" jdbcType="DECIMAL" />
    <result column="account_interest" property="accountInterest" jdbcType="DECIMAL" />
    <result column="platform_interest" property="platformInterest" jdbcType="DECIMAL" />
    <result column="channel" property="channel" jdbcType="INTEGER" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="add_ip" property="addIp" jdbcType="VARCHAR" />
    <result column="voucher_id" property="voucherId" jdbcType="INTEGER" />
    <result column="voucher_coupon_id" property="voucherCouponId" jdbcType="INTEGER" />
    <result column="voucher_interest" property="voucherInterest" jdbcType="DECIMAL" />
    <!--<result column="pre_account_interest" property="preAccountInterest" jdbcType="DECIMAL" />-->
    <result column="before_tender_id" property="beforeTenderId" jdbcType="INTEGER" />

  </resultMap>
  <resultMap id="TenderRecordResultMap" type="com.tuodao.bp.model.business.traningcenter.output.TenderRecord" >
    <id column="tenderTime" property="tenderTime" jdbcType="VARCHAR" />
    <result column="tenderUser" property="tenderUser" jdbcType="VARCHAR" />
    <result column="tenderAccount" property="tenderAccount" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="SelectTenderResultMap" type="com.tuodao.bp.model.business.traningcenter.output.SelectTenderOutput" >
    <result column="addTime" property="addTime" jdbcType="VARCHAR" />
    <result column="preAccount" property="preAccount" jdbcType="VARCHAR" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="borrowId" property="borrowId" jdbcType="INTEGER" />
    <result column="preAccountInterest" property="preAccountInterest" jdbcType="INTEGER" />
    <result column="voucherId"  property="voucherId" jdbcType="INTEGER" />
    <result column="voucherCouponId"  property="voucherCouponId" jdbcType="INTEGER" />
    <result column="status"  property="status" jdbcType="VARCHAR" />
    <result column="tenderId"  property="tenderId" jdbcType="VARCHAR" />

  </resultMap>

  <resultMap id="SelectNoMateResultMap" type="com.tuodao.bp.model.business.traningcenter.output.SelectNoMateOutput" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="INTEGER" />
    <result column="preAccount" property="preAccount" jdbcType="INTEGER" />
    <result column="voucherId"  property="voucherId" jdbcType="INTEGER" />
    <result column="channel"  property="channel" jdbcType="INTEGER" />
    <result column="voucherId"  property="voucherId" jdbcType="INTEGER" />
    <result column="voucherCouponId"  property="voucherCouponId" jdbcType="INTEGER" />
    <result column="mobile"  property="mobile" jdbcType="VARCHAR" />
    <result column="productId"  property="productId" jdbcType="INTEGER" />
  </resultMap>


  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, borrow_id, status, account, pre_account, account_interest, platform_interest, 
    channel, add_time, update_time, add_ip, voucher_id, voucher_coupon_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tuodao.bp.traningcenter.db.model.basic.BorrowChoicenessTenderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from borrow_choiceness_tender
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from borrow_choiceness_tender
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectNoMate" resultMap="SelectNoMateResultMap" parameterType="java.lang.Integer" >
    select
      id,user_id as userId,account as account,pre_account as preAccount,
        	case when (select count(1) from borrow_tender where voucher_id !=0 and choiceness_tender_id=tender.id)!=0
			 then null
			ELSE
			voucher_id
			end as voucherId,
        voucher_coupon_id as voucherCouponId,mobile,borrow_id as productId
    from borrow_choiceness_tender
    where status = 0 and account!= pre_account
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from borrow_choiceness_tender
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tuodao.bp.traningcenter.db.model.basic.BorrowChoicenessTenderExample" >
    delete from borrow_choiceness_tender
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tuodao.bp.traningcenter.db.model.basic.BorrowChoicenessTender" >
    insert into borrow_choiceness_tender (id, user_id, borrow_id, 
      status, account, pre_account, 
      account_interest, platform_interest, channel, 
      add_time, update_time, add_ip,mobile,
      voucher_id, voucher_coupon_id,voucher_interest,before_tender_id)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{borrowId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{account,jdbcType=DECIMAL}, #{preAccount,jdbcType=DECIMAL}, 
      #{accountInterest,jdbcType=DECIMAL}, #{platformInterest,jdbcType=DECIMAL}, #{channel,jdbcType=INTEGER}, 
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{addIp,jdbcType=VARCHAR},  #{mobile,jdbcType=VARCHAR},
      #{voucherId,jdbcType=INTEGER}, #{voucherCouponId,jdbcType=INTEGER},#{voucherInterest,jdbcType=DECIMAL}
      ,#{beforeTenderId,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.tuodao.bp.traningcenter.db.model.basic.BorrowChoicenessTender" >
    insert into borrow_choiceness_tender
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="borrowId != null" >
        borrow_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="preAccount != null" >
        pre_account,
      </if>
      <if test="accountInterest != null" >
        account_interest,
      </if>
      <if test="platformInterest != null" >
        platform_interest,
      </if>
      <if test="channel != null" >
        channel,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="addIp != null" >
        add_ip,
      </if>
      <if test="voucherId != null" >
        voucher_id,
      </if>
      <if test="voucherCouponId != null" >
        voucher_coupon_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="borrowId != null" >
        #{borrowId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=DECIMAL},
      </if>
      <if test="preAccount != null" >
        #{preAccount,jdbcType=DECIMAL},
      </if>
      <if test="accountInterest != null" >
        #{accountInterest,jdbcType=DECIMAL},
      </if>
      <if test="platformInterest != null" >
        #{platformInterest,jdbcType=DECIMAL},
      </if>
      <if test="channel != null" >
        #{channel,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addIp != null" >
        #{addIp,jdbcType=VARCHAR},
      </if>
      <if test="voucherId != null" >
        #{voucherId,jdbcType=INTEGER},
      </if>
      <if test="voucherCouponId != null" >
        #{voucherCouponId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tuodao.bp.traningcenter.db.model.basic.BorrowChoicenessTenderExample" resultType="java.lang.Integer" >
    select count(*) from borrow_choiceness_tender
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update borrow_choiceness_tender
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowId != null" >
        borrow_id = #{record.borrowId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=DECIMAL},
      </if>
      <if test="record.preAccount != null" >
        pre_account = #{record.preAccount,jdbcType=DECIMAL},
      </if>
      <if test="record.accountInterest != null" >
        account_interest = #{record.accountInterest,jdbcType=DECIMAL},
      </if>
      <if test="record.platformInterest != null" >
        platform_interest = #{record.platformInterest,jdbcType=DECIMAL},
      </if>
      <if test="record.channel != null" >
        channel = #{record.channel,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addIp != null" >
        add_ip = #{record.addIp,jdbcType=VARCHAR},
      </if>
      <if test="record.voucherId != null" >
        voucher_id = #{record.voucherId,jdbcType=INTEGER},
      </if>
      <if test="record.voucherCouponId != null" >
        voucher_coupon_id = #{record.voucherCouponId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update borrow_choiceness_tender
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      borrow_id = #{record.borrowId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      account = #{record.account,jdbcType=DECIMAL},
      pre_account = #{record.preAccount,jdbcType=DECIMAL},
      account_interest = #{record.accountInterest,jdbcType=DECIMAL},
      platform_interest = #{record.platformInterest,jdbcType=DECIMAL},
      channel = #{record.channel,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      add_ip = #{record.addIp,jdbcType=VARCHAR},
      voucher_id = #{record.voucherId,jdbcType=INTEGER},
      voucher_coupon_id = #{record.voucherCouponId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tuodao.bp.traningcenter.db.model.basic.BorrowChoicenessTender" >
    update borrow_choiceness_tender
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="borrowId != null" >
        borrow_id = #{borrowId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=DECIMAL},
      </if>
      <if test="preAccount != null" >
        pre_account = #{preAccount,jdbcType=DECIMAL},
      </if>
      <if test="accountInterest != null" >
        account_interest = #{accountInterest,jdbcType=DECIMAL},
      </if>
      <if test="platformInterest != null" >
        platform_interest = #{platformInterest,jdbcType=DECIMAL},
      </if>
      <if test="channel != null" >
        channel = #{channel,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addIp != null" >
        add_ip = #{addIp,jdbcType=VARCHAR},
      </if>
      <if test="voucherId != null" >
        voucher_id = #{voucherId,jdbcType=INTEGER},
      </if>
      <if test="voucherCouponId != null" >
        voucher_coupon_id = #{voucherCouponId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tuodao.bp.traningcenter.db.model.basic.BorrowChoicenessTender" >
    update borrow_choiceness_tender
    set user_id = #{userId,jdbcType=VARCHAR},
      borrow_id = #{borrowId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      account = #{account,jdbcType=DECIMAL},
      pre_account = #{preAccount,jdbcType=DECIMAL},
      account_interest = #{accountInterest,jdbcType=DECIMAL},
      platform_interest = #{platformInterest,jdbcType=DECIMAL},
      channel = #{channel,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      add_ip = #{addIp,jdbcType=VARCHAR},
      voucher_id = #{voucherId,jdbcType=INTEGER},
      voucher_coupon_id = #{voucherCouponId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--查询理财计划加入记录-->
  <select id="selectTenderListByBorrowId" resultMap="TenderRecordResultMap" parameterType="java.lang.Integer">
      select DATE_FORMAT(tender.add_time,"%Y-%m-%d %H:%i") as tenderTime,
           convert(tender.pre_account/100,decimal(10,2)) as tenderAccount,
           concat(substring(tender.mobile, 1, 3), '****', substring(tender.mobile, 8, 11)) as tenderUser
      from borrow_choiceness_tender tender
     where tender.borrow_id= #{borrowId}
       and tender.status in(0, 1, 4)
       and tender.before_tender_id is null
     order by tender.id asc
  </select>
  <!--查询最大投资-->
  <select id="selectMaxTenderByBorrowId" resultMap="TenderRecordResultMap" parameterType="java.lang.Integer">
   select DATE_FORMAT(tender.add_time,"%Y-%m-%d %H:%i") as tenderTime,
           tender.pre_account/100 as tenderAccount,
           concat(substring(tender.mobile, 1, 3), '****', substring(tender.mobile, 8, 11)) as tenderUser
      from borrow_choiceness_tender tender
     where tender.borrow_id= #{borrowId}
       and tender.status in(0, 1, 4)
       and tender.pre_account=(select MAX(pre_account) from borrow_choiceness_tender where borrow_id=#{borrowId} and status in (0,1,4))
       and tender.before_tender_id is null
     order by tender.id asc limit 0,1
  </select>


  <select id="selectMax" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select s.id,s.pre_account,s.mobile,s.user_id,s.channel
    from borrow_choiceness_tender t where t.status in (0,1,4) and t.borrow_id = #{borrowId} order by t.pre_account desc) s limit 1
  </select>
  <!--查询最后yibi投资-->
  <select id="selectLastTenderByBorrowId" resultMap="TenderRecordResultMap" parameterType="java.lang.Integer">
    select DATE_FORMAT(tender.add_time,"%Y-%m-%d %H:%i") as tenderTime,
    tender.pre_account/100 as tenderAccount,
    concat(substring(tender.mobile, 1, 3), '****', substring(tender.mobile, 8, 11)) as tenderUser
    from borrow_choiceness_tender tender
    where tender.borrow_id= #{borrowId}
    and tender.before_tender_id is null
    order by tender.id desc  limit 0,1
  </select>

  <select id="selectLast" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select s.id,s.pre_account,s.mobile,s.user_id
    from borrow_choiceness_tender t where t.status  in (0,1,4)  and t.borrow_id = #{borrowId} order by id desc) s limit 1
  </select>


  <select id="selectByStatusAndUserId" resultMap="SelectTenderResultMap" parameterType="com.tuodao.bp.model.business.traningcenter.input.SelectTenderInput">
    select id as tenderId,DATE_FORMAT(tender.add_time,"%Y-%m-%d %H:%i") as addTime,
    convert(tender.pre_account/100,decimal(10,2)) as preAccount,
    convert(tender.pre_account_interest/100,decimal(10,2)) as preAccountInterest,
    user_id,
    borrow_id,
    voucher_id,
    voucher_coupon_id,
    case when status=0 then '匹配中'
    when status=1 then '回款中'
    when status=2 then '撤标'
    when status=3 then '流标'
    when status=4 then '已完结'
    END as status
    from borrow_choiceness_tender tender
    where 1=1
    <if test="borrowId != null" >
     and tender.borrow_id= #{borrowId}
    </if>
    and tender.user_id = #{userId}
    <if test="status != null" >
      and tender.status = #{status}
    </if>
    <if test="startTime != null">
      and add_time &gt;= #{startTime}
    </if>
    <if test="endTime != null">
      and add_time &lt; #{endTime}
    </if>
    and tender.before_tender_id is null
    order by tender.id desc
  </select>

  <select id="selectSumJoinByTenderId" resultType="java.lang.Double" parameterType="java.lang.Integer">
      select  convert(sum(pre_account)/100,decimal(10,2)) as sumPreAccount from borrow_choiceness_tender where id=#{tenderId} or before_tender_id=#{tenderId}
  </select>


  <!--
     查询释放的资金
    -->
  <select id="selectReleaseFunds" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from borrow_choiceness_tender
    where id =(select choiceness_tender_id from borrow_tender where id=#{tenderId})
  </select>



  <!--
    查询理财计划的加入记录
  -->
  <select id="selectOriginalListByBorrowId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from borrow_choiceness_tender tender
    where tender.borrow_id= #{borrowId}
    and tender.status in(0, 1, 4)
    and tender.before_tender_id is null
    order by tender.id asc
  </select>


  <!--
    查询理财计划到期时候未匹配的资金
  -->
  <select id="selectNoMateOver" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from borrow_choiceness_tender tender
    where tender.borrow_id= #{borrowId}
    and tender.status =0
    and tender.pre_account != tender.account
  </select>
    <select id="getUserTenderCount" resultType="long">
        select count(1) from borrow_choiceness_tender where status in (1,4) and before_tender_id is null and user_id = #{userId}
    </select>

</mapper>
