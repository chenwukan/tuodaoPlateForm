<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuodao.bp.traningcenter.db.mapper.basic.AccountBankPaymentMapper">
  <resultMap id="BaseResultMap" type="com.tuodao.bp.traningcenter.db.model.basic.AccountBankPayment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="bank_id" jdbcType="VARCHAR" property="bankId" />
    <result column="payment_code" jdbcType="VARCHAR" property="paymentCode" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="order_number" jdbcType="INTEGER" property="orderNumber" />
    <result column="limit_one_time" jdbcType="DECIMAL" property="limitOneTime" />
    <result column="limit_one_day" jdbcType="DECIMAL" property="limitOneDay" />
    <result column="limit_one_month" jdbcType="DECIMAL" property="limitOneMonth" />
    <result column="payment" jdbcType="VARCHAR" property="payment" />
    <result column="is_direct" jdbcType="INTEGER" property="isDirect" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, name, bank_id, payment_code, status, order_number, limit_one_time, limit_one_day, 
    limit_one_month, payment, is_direct
  </sql>
  <select id="selectByExample" parameterType="com.tuodao.bp.traningcenter.db.model.basic.AccountBankPaymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_bank_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_bank_payment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_bank_payment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tuodao.bp.traningcenter.db.model.basic.AccountBankPaymentExample">
    delete from account_bank_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tuodao.bp.traningcenter.db.model.basic.AccountBankPayment">
    insert into account_bank_payment (id, type, name, 
      bank_id, payment_code, status, 
      order_number, limit_one_time, limit_one_day, 
      limit_one_month, payment, is_direct
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{bankId,jdbcType=VARCHAR}, #{paymentCode,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{orderNumber,jdbcType=INTEGER}, #{limitOneTime,jdbcType=DECIMAL}, #{limitOneDay,jdbcType=DECIMAL}, 
      #{limitOneMonth,jdbcType=DECIMAL}, #{payment,jdbcType=VARCHAR}, #{isDirect,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tuodao.bp.traningcenter.db.model.basic.AccountBankPayment">
    insert into account_bank_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="bankId != null">
        bank_id,
      </if>
      <if test="paymentCode != null">
        payment_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="limitOneTime != null">
        limit_one_time,
      </if>
      <if test="limitOneDay != null">
        limit_one_day,
      </if>
      <if test="limitOneMonth != null">
        limit_one_month,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="isDirect != null">
        is_direct,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null">
        #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null">
        #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="limitOneTime != null">
        #{limitOneTime,jdbcType=DECIMAL},
      </if>
      <if test="limitOneDay != null">
        #{limitOneDay,jdbcType=DECIMAL},
      </if>
      <if test="limitOneMonth != null">
        #{limitOneMonth,jdbcType=DECIMAL},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=VARCHAR},
      </if>
      <if test="isDirect != null">
        #{isDirect,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tuodao.bp.traningcenter.db.model.basic.AccountBankPaymentExample" resultType="java.lang.Long">
    select count(*) from account_bank_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_bank_payment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.bankId != null">
        bank_id = #{record.bankId,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentCode != null">
        payment_code = #{record.paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.orderNumber != null">
        order_number = #{record.orderNumber,jdbcType=INTEGER},
      </if>
      <if test="record.limitOneTime != null">
        limit_one_time = #{record.limitOneTime,jdbcType=DECIMAL},
      </if>
      <if test="record.limitOneDay != null">
        limit_one_day = #{record.limitOneDay,jdbcType=DECIMAL},
      </if>
      <if test="record.limitOneMonth != null">
        limit_one_month = #{record.limitOneMonth,jdbcType=DECIMAL},
      </if>
      <if test="record.payment != null">
        payment = #{record.payment,jdbcType=VARCHAR},
      </if>
      <if test="record.isDirect != null">
        is_direct = #{record.isDirect,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_bank_payment
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      bank_id = #{record.bankId,jdbcType=VARCHAR},
      payment_code = #{record.paymentCode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      order_number = #{record.orderNumber,jdbcType=INTEGER},
      limit_one_time = #{record.limitOneTime,jdbcType=DECIMAL},
      limit_one_day = #{record.limitOneDay,jdbcType=DECIMAL},
      limit_one_month = #{record.limitOneMonth,jdbcType=DECIMAL},
      payment = #{record.payment,jdbcType=VARCHAR},
      is_direct = #{record.isDirect,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tuodao.bp.traningcenter.db.model.basic.AccountBankPayment">
    update account_bank_payment
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null">
        bank_id = #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null">
        payment_code = #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="limitOneTime != null">
        limit_one_time = #{limitOneTime,jdbcType=DECIMAL},
      </if>
      <if test="limitOneDay != null">
        limit_one_day = #{limitOneDay,jdbcType=DECIMAL},
      </if>
      <if test="limitOneMonth != null">
        limit_one_month = #{limitOneMonth,jdbcType=DECIMAL},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=VARCHAR},
      </if>
      <if test="isDirect != null">
        is_direct = #{isDirect,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tuodao.bp.traningcenter.db.model.basic.AccountBankPayment">
    update account_bank_payment
    set type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      bank_id = #{bankId,jdbcType=VARCHAR},
      payment_code = #{paymentCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      order_number = #{orderNumber,jdbcType=INTEGER},
      limit_one_time = #{limitOneTime,jdbcType=DECIMAL},
      limit_one_day = #{limitOneDay,jdbcType=DECIMAL},
      limit_one_month = #{limitOneMonth,jdbcType=DECIMAL},
      payment = #{payment,jdbcType=VARCHAR},
      is_direct = #{isDirect,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>