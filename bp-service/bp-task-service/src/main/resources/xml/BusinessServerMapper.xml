<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tuodao.bp.task.server.dao.mapper.BusinessServerMapper" >
  <resultMap id="BaseResultMap" type="com.tuodao.bp.task.server.dao.model.BusinessServer" >
    <id column="serverId" property="serverid" jdbcType="INTEGER" />
    <result column="businessId" property="businessid" jdbcType="INTEGER" />
    <result column="serverAdd" property="serveradd" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    serverId, businessId, serverAdd, createTime, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tuodao.bp.task.server.dao.model.BusinessServerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from business_server
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from business_server
    where serverId = #{serverid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from business_server
    where serverId = #{serverid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tuodao.bp.task.server.dao.model.BusinessServerExample" >
    delete from business_server
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tuodao.bp.task.server.dao.model.BusinessServer" >
    <selectKey resultType="java.lang.Integer" keyProperty="serverid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into business_server (businessId, serverAdd, createTime, 
      updateTime)
    values (#{businessid,jdbcType=INTEGER}, #{serveradd,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tuodao.bp.task.server.dao.model.BusinessServer" >
    <selectKey resultType="java.lang.Integer" keyProperty="serverid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into business_server
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="businessid != null" >
        businessId,
      </if>
      <if test="serveradd != null" >
        serverAdd,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="businessid != null" >
        #{businessid,jdbcType=INTEGER},
      </if>
      <if test="serveradd != null" >
        #{serveradd,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tuodao.bp.task.server.dao.model.BusinessServerExample" resultType="java.lang.Integer" >
    select count(*) from business_server
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update business_server
    <set >
      <if test="record.serverid != null" >
        serverId = #{record.serverid,jdbcType=INTEGER},
      </if>
      <if test="record.businessid != null" >
        businessId = #{record.businessid,jdbcType=INTEGER},
      </if>
      <if test="record.serveradd != null" >
        serverAdd = #{record.serveradd,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update business_server
    set serverId = #{record.serverid,jdbcType=INTEGER},
      businessId = #{record.businessid,jdbcType=INTEGER},
      serverAdd = #{record.serveradd,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tuodao.bp.task.server.dao.model.BusinessServer" >
    update business_server
    <set >
      <if test="businessid != null" >
        businessId = #{businessid,jdbcType=INTEGER},
      </if>
      <if test="serveradd != null" >
        serverAdd = #{serveradd,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where serverId = #{serverid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tuodao.bp.task.server.dao.model.BusinessServer" >
    update business_server
    set businessId = #{businessid,jdbcType=INTEGER},
      serverAdd = #{serveradd,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where serverId = #{serverid,jdbcType=INTEGER}
  </update>
</mapper>